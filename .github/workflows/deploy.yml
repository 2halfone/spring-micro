name: Deploy SpringMon to VM

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4
        
      - name: ‚òï Setup Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: üî® Build Services
        run: |
          echo "üî® Building Gateway Service..."
          cd gateway-service
          mvn clean package -DskipTests
          
          echo "üî® Building Auth Service..."
          cd ../auth-service
          mvn clean package -DskipTests
          
          echo "üî® Building User Service..."
          cd ../user-service
          mvn clean package -DskipTests
          
          echo "‚úÖ All services built successfully!"
          
      - name: üöÄ Deploy to VM
        run: |
          echo "üîë Setting up SSH key..."
          echo "${{ secrets.DEPLOY_KEY }}" > key.pem
          chmod 600 key.pem
          
          echo "üì¶ Transferring files to VM..."
          # Copy docker-compose and source code
          scp -i key.pem -o StrictHostKeyChecking=no docker-compose.yml ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/opt/springmon/
          scp -i key.pem -o StrictHostKeyChecking=no -r gateway-service ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/opt/springmon/
          scp -i key.pem -o StrictHostKeyChecking=no -r auth-service ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/opt/springmon/
          scp -i key.pem -o StrictHostKeyChecking=no -r user-service ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/opt/springmon/
          scp -i key.pem -o StrictHostKeyChecking=no -r docker ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/opt/springmon/
          
          echo "üê≥ Deploying services on VM..."
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "
            cd /opt/springmon && 
            docker-compose down --remove-orphans || true &&
            docker-compose up -d --build &&
            echo '‚è≥ Waiting for services to start...' &&
            sleep 60 &&
            docker-compose ps          "
          
      - name: üè• Health Check
        run: |
          echo "üè• Performing health checks on VM: 34.140.122.146..."
          sleep 30
          
          # Test Gateway Service
          for i in {1..10}; do
            if curl -f http://34.140.122.146:8080/api/health; then
              echo "‚úÖ Gateway Service is healthy"
              break
            fi
            echo "‚è≥ Attempt $i/10: Waiting for Gateway to be ready..."
            sleep 10
          done
          
          # Test protected endpoint (should return 401)
          if curl -s -o /dev/null -w "%{http_code}" http://34.140.122.146:8080/api/users | grep -q "401"; then
            echo "‚úÖ Protected endpoint correctly secured"
          else
            echo "‚ö†Ô∏è Protected endpoint security check failed"
          fi
          
          # Final verification
          curl -f http://34.140.122.146:8080/api/health || exit 1
          echo "üéâ Deployment successful!"
          
      - name: üìä Deployment Summary
        if: always()
        run: |
          echo "üìä DEPLOYMENT SUMMARY"
          echo "===================="
          echo "üåê Gateway URL: http://${{ secrets.DEPLOY_HOST }}:8080"
          echo "üìÖ Deploy Time: $(date)"
          echo "üîó Commit: ${{ github.sha }}"
          echo "üöÄ Status: ${{ job.status }}"
